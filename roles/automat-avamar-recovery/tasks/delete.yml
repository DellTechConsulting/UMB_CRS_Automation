--- 
#### Cyber Recovery Login Setup
      - name: login
        uri:
          url: "{{cr_url}}/login"
          validate_certs: "{{crrest_verify_certs}}"
          method: POST
          body_format: json
          body:
            username: "{{crrest_username}}"
            password: "{{crrest_password}}"
        register: crrest_login_info
        tags:
          - delete
          - fail
#        no_log: "crrest_secure_logging"

      - name: Set Login Token
        set_fact:
          crrest_token: "{{crrest_login_info.json.accessToken}}"
          crrest_refresh_token: "{{crrest_login_info.json.refreshToken}}"
        tags:
          - delete
          - fail

      ################# Checking for Existing Sandbox
      - name: Check if Sandbox Exists
        uri:
          url: "{{ cr_url }}/policies/{{id1}}/sandboxes"
          validate_certs: "{{ crrest_verify_certs }}"
          method: GET
          headers:
                X-CR-AUTH-TOKEN: "{{ crrest_token }}"
                Accept: application/json
        register: crrest_sandbox_info
        tags:
          - delete
          - fail

      - name: Fetching the sandbox id  from the sandbox details 
        set_fact:
          pol_id: "{{pol_id + [item.policyid]}}"
        with_items: "{{ crrest_sandbox_info | json_query('json.items[*]')}}"
        tags:
          - delete
          - fail

      - debug: 
          msg: "{{pol_id}}"
        tags:
          - delete
          - fail
      
      - name: Fetching the sandbox id  from the sandbox details 
        set_fact:
          sandbox_id: "{{sandbox_id + [item.id]}}"
        with_items: "{{ crrest_sandbox_info | json_query('json.items[*]')}}"
        tags:
          - delete
          - fail

      - debug: 
          msg: "{{sandbox_id}}"
        tags:
          - delete
          - fail
     
      - name: Failing the playbook since sandbox exist
        when: (crrest_sandbox_info.json['items'] | length) != 0
        fail:
          msg: "sandbox exist for this policy {{pol_id}},before create the sandbox need to delete."
        tags:
          - fail

      - name: printing sandbox exist
        debug: 
          msg: "There were no sandbox found"
        when: (crrest_sandbox_info.json['items'] | length) == 0
        tags:
          - delete

      - name: Delete Sandbox
        uri:
         url: "{{ cr_url }}/policies/{{ id1 }}/sandboxes/{{ item }}"
         validate_certs: "{{ crrest_verify_certs }}"
         method: DELETE
         headers:
            X-CR-AUTH-TOKEN: "{{ crrest_token }}"
            Accept: application/json
        register: crrest_sandbox_delete
        with_items: 
          - "{{sandbox_id}}"
     
        tags: 
          - delete

      # Pause for 1 minutes to get the job status.
      - pause:
          minutes: "{{pause_time}}"
        tags:
          - delete
          
      - name: login
        uri:
          url: "{{cr_url}}/login"
          validate_certs: "{{crrest_verify_certs}}"
          method: POST
          body_format: json
          body:
            username: "{{crrest_username}}"
            password: "{{crrest_password}}"
        register: crrest_login_info
        tags:
          - delete
      - name: Set Login Token
        set_fact:
          crrest_token: "{{crrest_login_info.json.accessToken}}"
          crrest_refresh_token: "{{crrest_login_info.json.refreshToken}}"
        tags:
          - delete

      - name: Check Sandbox status 
        uri:
          url: "{{ cr_url }}/policies/{{id1}}/sandboxes"
          validate_certs: "{{ crrest_verify_certs }}"
          method: GET
          headers:
                X-CR-AUTH-TOKEN: "{{ crrest_token }}"
                Accept: application/json
        register: crrest_sandbox_info
      
        tags:
          - delete
      - name: printing sandbox exist
        debug: 
          msg: "There were no sandbox found, deleteted successfully for the policy {{pol_id}} of sandbox {{sandbox_id}}. "
        when: (crrest_sandbox_info.json['items'] | length) == 0
        tags:
          - delete
      
