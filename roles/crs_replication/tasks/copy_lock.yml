---
- name: Get CRS API authentication token
  uri:
    validate_certs: no
    url: "https://{{CR_static_IP}}/cr/v5/login"
    method: POST
    headers:
      Content-Type: application/json
      Accept: application/json
    return_content: yes
    body:
      username: "{{username}}"
      password: "{{password}}"
    body_format: json 
  register: results_login

- debug:
    msg: "{{results_login}}"

- name: Get CR Policy details
  uri:
    validate_certs: no
    force_basic_auth: yes
    url: https://{{CR_static_IP}}/cr/v5/policies/{{item.0}}/copies/{{item.1}}
    method: GET
    headers:
        Content-Type: application/json
        Accept: application/json
        X-CR-AUTH-TOKEN: "{{ results_login.json.accessToken}}"
    body_format: json
    status_code: 200
    return_content: yes
  register: policy_details1
  with_together:
    - "{{id}}"
    - "{{cid}}"


- name: printing policy id exist
  debug: 
    msg: "{{ policy_details1}}"

- set_fact:
    lock_status: "{{lock_status}} + [ '{{ item.json.lockStatus }}' ]"
  with_items: 
    - "{{ policy_details1.results}}"

- debug: 
    msg: "{{lock_status}}"

- name: Failing the playbook scince copy is already locked.
  fail:
    msg: Failing the playbook scince copy is already locked.
  when: item.json.lockStatus == "Locked"
  with_items: 
    - "{{ policy_details1.results}}"

- name: printing unlocked copy status
  debug: 
    msg: copy is {{lock_status }} ,we can  lock the copy.
  when: item.json.lockStatus == "Unlocked"
  with_items: 
    - "{{ policy_details1.results}}"

- name: create replication of the Policy 
  uri:
    validate_certs: no
    force_basic_auth: yes
    url: https://{{CR_static_IP}}/cr/v5/actions/lock
    method: POST
    headers:
        Content-Type: application/json
        Accept: application/json
        X-CR-AUTH-TOKEN: "{{ results_login.json.accessToken}}"
    body_format: json
    status_code: 200
    body:
      {
      "policyID": "{{item.0}}",
      "copyID": "{{item.1}}"
      } 
  register: results_Createpolicy1
  with_together:
    - "{{id}}"
    - "{{cid}}"

